{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jlamb\\\\OneDrive\\\\Desktop\\\\Development\\\\Personal\\\\React\\\\yt_lite\\\\src\\\\components\\\\VideoCard.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia } from '@mui/material';\nimport { CheckCircle } from '@mui/icons-material';\nimport { demoThumbnailUrl, demoChannelUrl, demoChannelTitle } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoCard(_ref) {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        md: '320px',\n        xs: '100%',\n        sm: '358px'\n      },\n      boxShadow: 'none',\n      borderRadius: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : demoVideoUrl,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: (snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url) || demoThumbnailUrl,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '358px',\n            md: '320px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: '#1e1e1e',\n        height: '160px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: videoId ? `/video/${videoId}` : demoVideoUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"#FFF\",\n          children: (snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)) || demoVideoTitle.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: snippet !== null && snippet !== void 0 && snippet.channelId ? `/channel/${snippet === null || snippet === void 0 ? void 0 : snippet.channelId}` : demoChannelUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"gray\",\n          children: [(snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle) || demoChannelTitle, /*#__PURE__*/_jsxDEV(CheckCircle, {\n            sx: {\n              fontSize: '12px',\n              color: 'gray',\n              ml: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = VideoCard;\nexport default VideoCard;\nvar _c;\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","Link","Typography","Card","CardContent","CardMedia","CheckCircle","demoThumbnailUrl","demoChannelUrl","demoChannelTitle","VideoCard","video","id","videoId","snippet","width","md","xs","sm","boxShadow","borderRadius","demoVideoUrl","thumbnails","high","url","title","height","backgroundColor","slice","demoVideoTitle","channelId","channelTitle","fontSize","color","ml"],"sources":["C:/Users/jlamb/OneDrive/Desktop/Development/Personal/React/yt_lite/src/components/VideoCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography, Card, CardContent, CardMedia } from '@mui/material'\r\nimport { CheckCircle } from '@mui/icons-material'\r\n\r\nimport { demoThumbnailUrl, demoChannelUrl, demoChannelTitle } from '../utils/constants'\r\n\r\nfunction VideoCard({ video: { id: { videoId }, snippet } }) {\r\n    return (\r\n        <Card sx={{\r\n            width: { md: '320px', xs: '100%', sm: '358px' },\r\n            boxShadow: 'none', borderRadius: 0\r\n        }}>\r\n            <Link to={videoId ? `/video/${videoId}` : demoVideoUrl}>\r\n                <CardMedia image={snippet?.thumbnails?.high?.url || demoThumbnailUrl}\r\n                    alt={snippet?.title}\r\n                    sx={{ width: { xs: '100%', sm: '358px', md:'320px'}, height: 180 }} />\r\n            </Link>\r\n            <CardContent sx={{ backgroundColor: '#1e1e1e', height: '160px' }}\r\n            >\r\n                <Link to={videoId ? `/video/${videoId}` : demoVideoUrl}>\r\n                    <Typography variant='subtitle1' fontWeight='bold' color='#FFF'>\r\n                        {snippet?.title.slice(0, 60) || demoVideoTitle.slice(0, 60)}\r\n                    </Typography>\r\n                </Link>\r\n                <Link to={snippet?.channelId ? `/channel/${snippet?.channelId}` : demoChannelUrl}>\r\n                    <Typography variant='subtitle2' color='gray'>\r\n                        {snippet?.channelTitle || demoChannelTitle}\r\n                        <CheckCircle sx={{ fontSize: '12px', color: 'gray', ml: '5px' }} />\r\n                    </Typography>\r\n                </Link>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default VideoCard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AACxE,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,oBAAoB;AAAA;AAEvF,SAASC,SAAS,OAA0C;EAAA;EAAA,IAAzC;IAAEC,KAAK,EAAE;MAAEC,EAAE,EAAE;QAAEC;MAAQ,CAAC;MAAEC;IAAQ;EAAE,CAAC;EACtD,oBACI,QAAC,IAAI;IAAC,EAAE,EAAE;MACNC,KAAK,EAAE;QAAEC,EAAE,EAAE,OAAO;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAQ,CAAC;MAC/CC,SAAS,EAAE,MAAM;MAAEC,YAAY,EAAE;IACrC,CAAE;IAAA,wBACE,QAAC,IAAI;MAAC,EAAE,EAAEP,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAGQ,YAAa;MAAA,uBACnD,QAAC,SAAS;QAAC,KAAK,EAAE,CAAAP,OAAO,aAAPA,OAAO,8CAAPA,OAAO,CAAEQ,UAAU,iFAAnB,oBAAqBC,IAAI,0DAAzB,sBAA2BC,GAAG,KAAIjB,gBAAiB;QACjE,GAAG,EAAEO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,KAAM;QACpB,EAAE,EAAE;UAAEV,KAAK,EAAE;YAAEE,EAAE,EAAE,MAAM;YAAEC,EAAE,EAAE,OAAO;YAAEF,EAAE,EAAC;UAAO,CAAC;UAAEU,MAAM,EAAE;QAAI;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvE,eACP,QAAC,WAAW;MAAC,EAAE,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAED,MAAM,EAAE;MAAQ,CAAE;MAAA,wBAE7D,QAAC,IAAI;QAAC,EAAE,EAAEb,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAGQ,YAAa;QAAA,uBACnD,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,UAAU,EAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAA,UACzD,CAAAP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,KAAIC,cAAc,CAACD,KAAK,CAAC,CAAC,EAAE,EAAE;QAAC;UAAA;UAAA;UAAA;QAAA;MAClD;QAAA;QAAA;QAAA;MAAA,QACV,eACP,QAAC,IAAI;QAAC,EAAE,EAAEd,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEgB,SAAS,GAAI,YAAWhB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgB,SAAU,EAAC,GAAGtB,cAAe;QAAA,uBAC7E,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,KAAK,EAAC,MAAM;UAAA,WACvC,CAAAM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiB,YAAY,KAAItB,gBAAgB,eAC1C,QAAC,WAAW;YAAC,EAAE,EAAE;cAAEuB,QAAQ,EAAE,MAAM;cAAEC,KAAK,EAAE,MAAM;cAAEC,EAAE,EAAE;YAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAC1D;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEf;AAAC,KA3BQxB,SAAS;AA6BlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}